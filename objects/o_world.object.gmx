<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize
global.console = ds_list_create();
global.typing = false;

// run in release
//gml_release_mode(!debug_mode);
//randomize();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// OSD
d3d_set_lighting(false);

var lines = floor(view_hview[0] / 16) - 6;
for (var i = 0; i &lt; ds_list_size(global.console); i++)
{
    var con = ds_map_create();
    ds_map_read(con, global.console[| i]);
    var text = ds_map_find_first(con);
    for (var j = 0; j &lt; ds_map_size(con); j++)
    {
        color = ds_map_find_value(con, text);
        var yy = 64 + (i mod lines * 16);
        draw_text_colour(14, yy, i, c_yellow, c_yellow, c_yellow, c_yellow, 0.75);
        draw_text_colour(32, yy, text, color, color, color, color, 0.75);
        text = ds_map_find_next(con, text);
    }
    ds_map_destroy(con);
}
draw_text_colour(16, 50, string(lines - ds_list_size(global.console)), c_orange, c_orange, c_orange, c_orange, 0.75);

if (global.typing)
{
    input = ternary(global.typing, keyboard_string + "|", keyboard_string);
    draw_text_color(16, view_hview[0] - 32, input, c_white, c_white, c_white, c_white, 0.75);
    //draw_text_color(16, view_hview[0] - 16, parse(keyboard_string), c_orange, c_orange, c_orange, c_orange, 0.5);
}

d3d_set_lighting(true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Quit
if (global.typing)
    global.typing = false;
else
    game_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Input
if (global.typing)
{
    if (!isEmpty(keyboard_string))
        cout(o_camera.target.name + ": " + keyboard_string, c_white);

    // clear and stop typing
    keyboard_string = "";
    global.typing = false;
}
else
{
    // clear and start typing
    keyboard_string = "";
    global.typing = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
